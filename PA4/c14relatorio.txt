Etapa 1 - A vari√°vel fact n√£o √© inicializada antes de calcular o fatorial, o que pode ocasionar em comportamento indefinido

Etapa 2 - Script started on 2024-11-15 01:09:07-03:00 [TERM="xterm-256color" TTY="/dev/pts/22" COLUMNS="205" LINES="20"]
==315672== Memcheck, a memory error detector
==315672== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==315672== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==315672== Command: ./exec
==315672== 
Positive integer:4
==315672== Conditional jump or move depends on uninitialised value(s)
==315672==    at 0x48E7AD6: __vfprintf_internal (vfprintf-internal.c:1516)
==315672==    by 0x48D179E: printf (printf.c:33)
==315672==    by 0x10920D: main (c14correto.c:12)
==315672==  Uninitialised value was created by a stack allocation
==315672==    at 0x109189: main (c14correto.c:3)
==315672== 
==315672== Use of uninitialised value of size 8
==315672==    at 0x48CB2EB: _itoa_word (_itoa.c:177)
==315672==    by 0x48E6ABD: __vfprintf_internal (vfprintf-internal.c:1516)
==315672==    by 0x48D179E: printf (printf.c:33)
==315672==    by 0x10920D: main (c14correto.c:12)
==315672==  Uninitialised value was created by a stack allocation
==315672==    at 0x109189: main (c14correto.c:3)
==315672== 
==315672== Conditional jump or move depends on uninitialised value(s)
==315672==    at 0x48CB2FC: _itoa_word (_itoa.c:177)
==315672==    by 0x48E6ABD: __vfprintf_internal (vfprintf-internal.c:1516)
==315672==    by 0x48D179E: printf (printf.c:33)
==315672==    by 0x10920D: main (c14correto.c:12)
==315672==  Uninitialised value was created by a stack allocation
==315672==    at 0x109189: main (c14correto.c:3)
==315672== 
==315672== Conditional jump or move depends on uninitialised value(s)
==315672==    at 0x48E75C3: __vfprintf_internal (vfprintf-internal.c:1516)
==315672==    by 0x48D179E: printf (printf.c:33)
==315672==    by 0x10920D: main (c14correto.c:12)
==315672==  Uninitialised value was created by a stack allocation
==315672==    at 0x109189: main (c14correto.c:3)
==315672== 
==315672== Conditional jump or move depends on uninitialised value(s)
==315672==    at 0x48E6C05: __vfprintf_internal (vfprintf-internal.c:1516)
==315672==    by 0x48D179E: printf (printf.c:33)
==315672==    by 0x10920D: main (c14correto.c:12)
==315672==  Uninitialised value was created by a stack allocation
==315672==    at 0x109189: main (c14correto.c:3)
==315672== 
Factorial 4 = 0
==315672== 
==315672== HEAP SUMMARY:
==315672==     in use at exit: 0 bytes in 0 blocks
==315672==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==315672== 
==315672== All heap blocks were freed -- no leaks are possible
==315672== 
==315672== For lists of detected and suppressed errors, rerun with: -s
==315672== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

Script done on 2024-11-15 01:09:11-03:00 [COMMAND_EXIT_CODE="0"]

GNU gdb (Ubuntu 12.1-0ubuntu1~22.04.2) 12.1[m
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./exec[m...
[?2004h(gdb) break main
[?2004l
Breakpoint 1 at [34m0x1195[m: file [32mc14correto.c[m, line 3.
[?2004h(gdb) run
[?2004l
Starting program: [32m/home/luiz/Documentos/PAs_ED/PA4/exec[m 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".

Breakpoint 1, [33mmain[m () at [32mc14correto.c[m:3
3	[32mint[m [01mmain[m[31m([m[32mvoid[m[31m)[m [31m{[m
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
6	  [01mprintf[m[31m([m[31m"Positive integer:"[m[31m);[m
[?2004h[?2004l
[?2004h(gdb) 3
[?2004l
Undefined command: "3".  Try "help".
[?2004h(gdb) next[K[K[K[Kprint fact
[?2004l
$1 = 0
[?2004h(gdb) print fact
[C[C[C[C[C[C3[Knext
[?2004l
7	  [01mscanf[m[31m([m[31m"%d"[m[31m,[m [31m&[mn[31m);[m
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
Positive integer:3
9	  [01;34mfor[m[31m([mi [31m=[m [35m1[m[31m;[m i[31m<=[mn[31m;[m i[31m++)[m 
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
10	    fact [31m=[m fact[31m*[mi[31m;[m
[?2004h[?2004l
[?2004h(gdb) print fact
[?2004l
$2 = 0
[?2004h(gdb) print fact
[C[C[C[C[C[C[6Pnext
[?2004l
9	  [01;34mfor[m[31m([mi [31m=[m [35m1[m[31m;[m i[31m<=[mn[31m;[m i[31m++)[m 
[?2004h[?2004l
[?2004h(gdb) nextprint fact
[?2004l
$3 = 0
[?2004h(gdb) print fact
[C[C[C[C[C[C[6Pnext
[?2004l
10	    fact [31m=[m fact[31m*[mi[31m;[m
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
9	  [01;34mfor[m[31m([mi [31m=[m [35m1[m[31m;[m i[31m<=[mn[31m;[m i[31m++)[m 
[?2004h[?2004l
[?2004h(gdb) nextprint fact
[?2004l
$4 = 0
[?2004h(gdb) print fact
[C[C[C[C[C[C[6Pnext
[?2004l
10	    fact [31m=[m fact[31m*[mi[31m;[m
[?2004h[?2004l
[?2004h(gdb) nextprint fact
[C[C[C[C[C[C[6Pnext
[?2004l
9	  [01;34mfor[m[31m([mi [31m=[m [35m1[m[31m;[m i[31m<=[mn[31m;[m i[31m++)[m 
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
12	  [01mprintf[m[31m([m[31m"Factorial %d = %d[m[35m\n[m[31m"[m[31m,[m n[31m,[m fact[31m);[m
[?2004h[?2004l
[?2004h(gdb) next
[?2004l
Factorial 3 = 0
13	[31m}[m
[?2004h[?2004l
[?2004h(gdb) next[K[K[K[Kcontinue
[?2004l
Continuing.
[Inferior 1 (process 316749) exited normally]
[?2004h[?2004l
[?2004h(gdb) quit

Etapa 3 - A solu√ß√£o ideal √© inicializar fact com 1 para evitar esse erro.

Etapa 4 - Script started on 2024-11-15 01:12:33-03:00 [TERM="xterm-256color" TTY="/dev/pts/22" COLUMNS="205" LINES="20"]
==321280== Memcheck, a memory error detector
==321280== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==321280== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==321280== Command: ./exec
==321280== 
Positive integer:3
Factorial 3 = 6
==321280== 
==321280== HEAP SUMMARY:
==321280==     in use at exit: 0 bytes in 0 blocks
==321280==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==321280== 
==321280== All heap blocks were freed -- no leaks are possible
==321280== 
==321280== For lists of detected and suppressed errors, rerun with: -s
==321280== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on 2024-11-15 01:12:36-03:00 [COMMAND_EXIT_CODE="0"]
